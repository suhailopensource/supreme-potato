class Solution {
public:
	string countAndSay(int n) {
		if(n == 1) return "1";
		string ans = solve("1", 2, n); //solve function
		return ans;
	}	
	string solve(string s, int curr, int n){
		//terminating condition
		if(curr > n){
			return s;
		}        	
		int count = 0;
		string temp = "";
		char ch = '0'; //default char is 0 because according to constraints character will be in range of 1 to 9	
		for(int i = 0; i < s.length(); ++i){	
		//if the character is same as the previous one then increase the count
			if(s[i] == ch) count++; 	
			//if the character changes, then convert the count to string and add it to the string along with the character.
			else{
				if(ch != '0'){ //to handle the initial condition
				
					temp += to_string(count)+ch; 
				}
				
				//reset the count and the character variable.
				count = 1;
				ch = s[i];
			}
		}
			//since the last char is not added yet, add the last char with its frequency
			temp += to_string(count) + ch;	
			//recursively call for the next value.
			return solve(temp, curr + 1, n);
	}
};