QUESTION LINK --- https://practice.geeksforgeeks.org/problems/composite-and-prime0359/1


class Solution {
	public:
	bool isprime(int num){
	    for(int i=2; i<=sqrt(num);i++){
	        if(num%i==0){
	            return false;
	        }
	    }
	    return true;
	}
		int Count(int L, int R){
		    // Code here
		    int co =0, pr = 0;
		    for(int i = max(L,2); i <= R;i++){
		        if(isprime(i)){
		            pr++;
		        }else{
		            co++;
		        }
		    }
		    return co - pr;
		}

};

METHOD @@ 2


class Solution {
	public:  
	    vector<int>v;
	    int checkp(int r){
	        for(int i=2;i<=sqrt(r);i++){
	            
	            if(r%i==0) return 0;
	        }
	        return 1;
	        
	    }
	     int f(int r){
	         if(r==0) return 0;
	         if(r==1) return 0;
	         if(r==2) return 1;
	         int x=checkp(r);
	         return v[r]=f(r-1)+x;
	         
	         
	         
	     }
		int Count(int L, int R){
		    v.resize(R+1,0);
		    v[0]=0;
		    v[1]=0;
		    v[2]=1;
		    int zz=f(R);
		  //  cout<<v[R]<<" "<<v[L]<<endl;
		    int s=0;
		    if(L==1) s++;
		    return ((R-L+1-(v[R]-v[L-1]))-(v[R]-v[L-1]))-s;
		    
		    
		    
		}

};

