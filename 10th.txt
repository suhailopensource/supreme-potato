class Solution{
  public:
    int minJumps(int arr[], int n){
        // Your code here
        int jump = 1;
        if(n<=1){
            return 0;
        }
        if(arr[0] == 0){
            return -1;
        }
        
        
        int step = arr[0];
        int maxreach = arr[0];
        for(int i = 1; i < n;i++){
            if(i >= n-1){
                return jump;
            }
            maxreach = max(maxreach,i+arr[i]);
            step--;
            
            if(step == 0){
                jump++;
                
                if(i >= maxreach){
                    return -1;
                }
                
                step = maxreach - i;
            }
        }
        return -1;
    }
};



Method 2


class Solution{
  public:
    int minJumps(int arr[], int n){
        // Your code here
        int target = n-1, jump = 0;
        while(target!=0){
            int i = 0;
        for(; i < target; i++){
            if(i+arr[i]>= target){
                jump++;
                break;
            }
        }
        if(i==target)return -1;else target = i;
      }
      return jump;
    }
};