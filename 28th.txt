 bool find3Numbers(int A[], int n, int X)
    {
        //Your Code Here
        unordered_map<int,int> mp;
        for(int i=0;i<n;i++)
        {
            int sum=A[i];
            for(int j=i+1;j<n;j++)
            {
                sum+=A[j];
                if(mp.find(X-A[j])==mp.end())
                {
                    mp[sum]++;
                }
                else
                {
                    return true;
                }
                sum-=A[j];
            }
            mp.clear();
        }
        return false;
    }


METHOD @@ 2

class Solution{
    public:
    //Function to find if there exists a triplet in the 
    //array A[] which sums up to X.
    bool find3Numbers(int A[], int n, int X)
    {
        //Your Code Here
        sort(A, A+n);
        for(int i = 0; i < n ; i++)
        {
            int l = i+1, r = n-1, target = X-A[i];
            while(l<r)
            {
                if(A[l]+A[r] == target)
                    return true;
                else if(A[l]+A[r] > target)
                    r--;
                else
                    l++;
            }
        }
        return false;
    }

};