int maxProfit(vector<int>&price){
    //Write your code here..
    int n = price.size();
    vector<int> profit(n,0);
    int max_price = price[n-1];
    for(int i = n-2; i>=0;i--){
        if(max_price < price[i]){
            max_price = price[i];
        }
        profit[i] = max(profit[i+1], max_price - price[i]);
    }
    
    int min_price = price[0];
    for(int i = 1; i < n; i++){
        if(min_price > price[i]){
            min_price = price[i];
    }
    profit[i] = max(profit[i-1],profit[i] + (price[i] - min_price));
    }
    int result =  profit[n-1];
    return result;
    }



BEST METHOD @@ 2

int maxProfit(vector<int>&price){
    //Write your code here..
    int n=price.size();
    int b1=INT_MAX;
    int b2=INT_MAX;
    int p1 = 0;
    int p2 = 0;
    for(int i =0 ;i<n;i++){
        b1 = min(b1,price[i]);
        p1 = max(p1,price[i]-b1);
        b2 = min(b2,price[i]-p1);
        p2 = max(p2,price[i]-b2);
    }
    return p2;
}